name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  insecure: 
    runs-on: ubuntu-latest 
    steps:
      - name : check out repositry code 
        uses: actions/checkout@v3
      - name: List files in the repositry 
        run: | 
          ls ${{ github.workspace }}
      - run: npm install 
        working-directory: insecure 
      - id: insecure-audit 
        run: npm audit 
        working-directory: insecure 
  mashup: 
    runs-on: ubuntu-latest 
    steps:
      - name : check out repositry code 
        uses: actions/checkout@v3
      - name: List files in the repositry 
        run: | 
          ls ${{ github.workspace }}
      - run: npm install 
        working-directory: mashup
      - name: Create annotation for build error
        run: echo "::error file=app.js,line=1::Missing semicolon"
      - id: mashup-audit 
        run: npm audit 
        working-directory: mashup
      - run: npm run lint 
        working-directory: mashup 
        
  unittesting: 
    runs-on: ubuntu-latest 
    steps:
      - name : check out repositry code 
        uses: actions/checkout@v3
      - name: List files in the repositry 
        run: | 
          ls ${{ github.workspace }}
      - run: npm install 
        working-directory: unittesting
      - id: unittesting-audit 
        run: npm audit 
      -id: unittesting-test
        run: npm run test
        working-directory: unittesting
      